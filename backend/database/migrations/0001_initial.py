# Generated by Django 4.2 on 2023-04-19 22:54

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('user_name', models.CharField(unique=True)),
                ('email', models.CharField(unique=True)),
                ('password_hash', models.CharField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('first_name', models.CharField()),
                ('last_name', models.CharField()),
                ('avatar', models.CharField()),
                ('phone_number', models.CharField(unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='database.user')),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(unique=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.user')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(unique=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('role', models.ManyToManyField(to='database.role')),
            ],
            options={
                'db_table': 'permission',
            },
        ),
    ]
